{"version":3,"sources":["router/router.js","helpers/storage.js","node_modules/axios/lib/helpers/bind.js","node_modules/is-buffer/index.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/adapters/xhr.js","../../../../../../Users/x/AppData/Roaming/npm/node_modules/parcel/node_modules/process/browser.js","node_modules/axios/lib/defaults.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/axios.js","node_modules/axios/index.js","helpers/requester.js","node_modules/sammy/lib/sammy.js","app.js","index.js"],"names":["Router","name","routes","exports","router","path","saveData","key","value","localStorage","setItem","getData","getItem","deleteData","removeItem","module","isBuffer","obj","constructor","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","storage","require","axios","sendRequest","url","method","data","headers","baseUrl","token","Authorization","currentPath","window","location","pathname","container","document","getElementById","sample","innerHTML","html","Mustache","to_html","console","log","route","filter","r"],"mappings":"A6BAA,A5BAA,A2BAA,AZAA,AWAA,AHAA,ACAA,AjBAA,AeAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,ALAA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,ADAA,AHAA,I6BAM2E,A7BAA3E,MAAM,C6BAC,E7BAE,C6BAC4E,OAAO,CAAC,A7BAlB5E,MAAS,CAASC,I6BAD,A7BAR,C6BAf,C7BA8BC,MAAf,EAAuB;AiBAtC,AhBCAC,AeAA,AWAA,AHAA,ACAA,AjBAA,AeAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,A0BDA,A9BCE,OCAK,CAACG,CDAC,OCAT,GAAmB,UAASC,GAAT,EAAcC,KAAd,EAAqB;AgBAxC,AcDA,AFCA,A5BCEC,A+BFF,AhBEA,AWAA,AHAA,ACAA,AjBAA,AeAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,A0BDA,A9BCIR,ECAFQ,EgBDEU,AYAE0D,A7BCF5E,IAAI,C6BDG,C7BCPA,CiBDO,CYAG2E,EZAA7D,AhBCA,ADDL,CCCML,I4BDM,CZAD,AYAE,CZADP,ChBCnB,CAAqBI,GAArB,C4BDmB,CZAP,AYAd,A5BC4BC,GgBDG,EAA/B,AhBCE,EgBCF;AACA,AhBDC,AeAD,AWAA,AHAA,ACAA,AjBAA,AeAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,A0BDA,A9BCIN,CCFJ,GDEIA,MAAM,EAANA;AiBEJ,AcJA,AFEAC,AGFA,AhBGA,AWAA,AHAA,ACAA,AjBAA,AeAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,A0BDA,A9BFS,GAAP,I6BEK,CAAC2E,WAAR,GAAsB,UAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqC;AZG3D,AYFE,A5BAF/E,AeCA,AWAA,AHAA,ACAA,AjBAA,AeAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,A0BDA,A9BCC,CALD,K6BIQgF,C5BAD,CAACxE,K4BAO,E5BAf,C4BAkB,E5BAA,UAAAJ,GAAG,EAAI,M4BAvB;AEFF,AFGE0E,A5BAA,A+BHF,AhBIA,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,ADCAlE,A2BFA,EDAEkE,IAAI,A1BEA,CAAC9E,E0BFE8E,A5BAAxE,I4BAI,C1BEb,G0BFiB,A1BEA,E0BFf,E5BAmB,CAACG,IEEII,GFFjB,CAAqBT,GAArB,CAAP,AEEe,CAAmBU,GAAnB,EAAwB;AcCzC,AYFEiE,A5BAD,AeCD,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,ADCE,A2BFF,A9BCA/E,CCHA,C4BEE+E,EZEE9D,GjBDG,CAAChB,C6BDC,A1BEAa,G0BFGiE,A1BEA,EHDZ,EGCgB,CHDC,E6BDE,CZEnB,AdAS,CHDYlF,E6BDE,C1BECiB,C0BFtB,CAHyD,CAIzD,A1BCyB,AHDV,CGCWC,AHDA,QAAX,EAAqB,CGCd,AHAtB,IGAyC,IAAlC,IACL,OAAOD,GAAG,CAACC,WAAJ,CAAgBF,QAAvB,KAAoC,UAD/B,IAC6CC,GAAG,CAACC,WAAJ,CAAgBF,QAAhB,CAAyBC,GAAzB,CADpD;AcCF,AcNA,ACCA,AhBIA,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,ADEC,A2BHD,A9BEIZ,CGFJ,CHEIA,EiBAAgB,EjBAI,EAAE,GADR,WiBCF;AcLA,AFIE,A5BAFlB,AeCA,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,A0BDA,A9BEIF,EAAAA,E+BNEqF,EFIAX,A7BEE,CCFD,CAAC9D,ADEE,K6BFG,CAACF,CEJG,GAAG4E,A9BIpB,G4BAM,A5BAe,C4BAC,EEJI,CAACC,M9BIGjF,E8BJV,AFId,CEJ8BkF,AFIlC,A5BAmB,E4BAe,A5BAD,M8BJnC;AdOA,AcNA,AFII,A5BAFhF,A+BJF,AhBKA,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,A0BDA,A9BDE,CADoC,CCEpCA,CDGA,C+BPIiF,IFIIN,CZED9D,IcNM,AFIA,C5BAD,CAACR,C8BJG6E,AFIAhB,OAAO,CEJC,AFIAhE,CZE1B,AcN2BiF,A9BIzB,CAAwBrF,EgBEE,ChBF1B,E4BAgB,CAAgB,OEJhB,CAAwB,GFIxB,CAAd,OEJc,CAAlB;AdOI,AYFA2E,A5BAH,AeCD,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AhBCA,AGAA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,A0BDA,A9BGI7E,CCLJ,CDKIA,E6BHA6E,E7BGI,EiBDE,AjBCA,G6BHC,CZEG3D,AYFF8D,KZEF,CAAU,CjBAlB,M6BFE,oBAAkCD,KAAlC,CZEM,CAAN;AACH,AcND,AFIG,AbCH,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AbCA,AeAA,ALAA,AIAA,ALAA,ALAA,AIAA,AaAA,AtBAA,A0BDA,A9BGInF,EAAAA,E+BPAqF,E/BOI,EAAE,O+BPK,KAAK,GAApB,EAAyB;AACvB,AfKF,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AbCA,AeAA,ALAA,AIAA,ALAA,ADAA,AaAA,AtBAA,A0BDA,A9BAE,CALoC,EASpC;AiBFF,AcLE,AFIA,AbCF,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AbCA,AeAA,ALAA,AIAA,ALAA,ADAA,AaAA,AtBAA,A0BDA,A9BIIjF,EAAAA,IAAI,EAAE,CiBHDmB,AYDAqD,KAAK,CAAC,C7BGb,YiBFF,GAAgC;AAC5B,AcLF,AFIEG,AbCJ,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,A9BII/E,EAAAA,E6BJA+E,E7BII,EiBHE,AjBGA,E6BJA,EZCIzD,AYDFyD,KZCF,CAAU,AYFL,mCZEL,CAAN;AACH,AcLC,AFIED,AbCJ,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,A9BCE,CAToC,EAapC,C6BLEA,GAAG,YAAKI,OAAO,GAAGJ,GAAf,CAFQ;AEDb,AFIEE,AbCJ,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,A9BKI5E,EAAAA,E6BLA4E,E7BKI,E6BLA,A7BKE,E6BLAA,IAHK,K7BOb;AiBHD,AcJC,AFIEC,AbCJ,AWAA,AHAA,ACAA,AFAA,AjBAA,AKAA,AUAA,AXAA,AYAA,AVAA,ALAA,AWDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,A9BKIjF,EAAAA,E6BLAiF,E7BKI,EAAE,G6BLC,EZAE,AYAAA;AZCT,AcJF,AFDa,AbMf,AWAA,AHAA,ACAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AVAA,ALAA,AWDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,A9BEE,CAboC,E6BMxB,A7BWZ,C6BXA,EZKM;AACA,AcJN,AFID,AbCD,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AVAA,ALAA,AWDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,A9BMI7E,C6BtBJ,C7BsBIA,IAAI,EiBNI,AjBMF,OiBNSoB,CjBKjB,SiBLU,KAAsB,UAA1B,EAAsC;AAClCL,AcJV,AfKF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AVAA,AMDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,A9BMInB,EAAAA,IiBNQmB,AjBMJ,EAAE,ciBNkB,GAAGK,UAAnB;AACH,AcJP,AfKF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AVAA,AMDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,A9BGE,CAjBoC,CAArB,CAAjB,EiBYQ,MAEO;AACHL,AcJV,AfKF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AVAA,AMDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,MbAYA,AcJNyE,MAAM,GAAGF,OdIa,CcJL,CAACC,CdIOtE,acJhB,CAAwB,EdI3B,ScJG,EAAqCwE,SAAlD;AdKO,AcJP,AfKF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AVAA,AMDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,MCJMb,IAAI,GAAG;AdKR,AcLU3B,AfMf,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AVAA,AMDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,GbNI,CAME,AcLSA,KAAK,EdKP5B,AcLS,CdKhB,EAAU;AACRN,AcNK,AfOb,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA,GCNE,CdMMA,gBAAgB,GAAGE,gBAAnB;AACH,ADCL,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,AaAA,AtBAA,A0BDA;ACNE,AfQF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,MCPMyE,IAAI,GAAGC,gBAASC,OAAT,CAAiBJ,MAAjB,EAAyBZ,IAAzB,CAAX;AdOE,ADEJ,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,MbDQ;AACA,AcPNS,AfSF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,ECREA,MdOU,GcPD,CAACI,GdOOnE,McPjB,GAAsBoE,GdOZ,CcPV,IdOkC,UAA5B,EAAwC;AACpC1E,AcPV6E,AfSF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,ECREA,IdOU7E,GcPH,CAAC8E,GAAR,CAAYN,MAAZ,IdO4B,GAAGlE,YAArB;AACH,AcPR,AfSD,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,CCxBA,IdqBQ,EcLD,IdOQ;AACHN,AcPV,AfSF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,MbDYA,AcPJ+E,KAAK,GAAGhG,UdOc,GAAGoB,EcPVtB,MAAP,CAAcmG,MAAd,CAAqB,GdOzB,OcPyBC,CAAC,EAAI;AdQjC,AcPL,AfSJ,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,WCRWA,CAAC,CAACjG,IAAF,KAAWiF,WAAlB;AdQC,AcPF,AfSH,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,GbPI,AcHY,CdSV,CcPD,CAFW,CAAd,IdSW5D,CAAP,EAAU;AACRL,ADER,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,IbDQA,kBAAkB,GAAGG,mBAArB;AACH,AcRH0E,AfUF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,ECTEA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AdSD,ADED,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,CbpBC,GAAD;AcWE,AfWF,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,MCVMA,KAAJ,EAAW;AdSb,AcRI,AfWJ,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,SbFSxE,UAAT,CAAoBC,GAApB,EAAyB;AACrB,AcPA,AfUJ,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,MbFQT,EcPE2D,GAAG,GAAGqB,KAAK,CAAC/F,EdOE,EcPpB,GdOyBoB,UAAzB,EAAqC;AACjC,AcPJyE,AfUJ,AWAA,AFAA,AFAA,AjBAA,AeAA,AXAA,AYAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,ICTIA,OAAO,CAACC,GAAR,CAAYpB,GAAZ;AdQI,AcPL,AfUH,AWAA,AFAA,AFAA,AjBAA,AeAA,ACAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,GCdE,MAKO,EdOMtD,UAAU,CAACI,GAAD,EAAM,CAAN,CAAjB;AACH,AcPD6D,AfUJ,AWAA,AFAA,AFAA,AjBAA,AeAA,ACAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,GbNyB,CAKrB,AcRAA,SAAS,CAACI,SAAV,GAAsB,4CAAtB;AACD,AfUH,AWAA,AFAA,AFAA,AjBAA,AeAA,ACAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA;ACRC,AfUD,AWAA,AFAA,AFAA,AjBAA,AeAA,ACAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA;AbFI,ADIJ,AWAA,AFAA,AFAA,AjBAA,AeAA,ACAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,MbHQ,CAAC1E,gBAAgB,KAAKE,gBAArB,IAAyC,CAACF,gBAA3C,KAAgEK,UAApE,EAAgF;AAC5EL,ADIR,AWAA,AFAA,AFAA,AjBAA,AeAA,ACAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,IbHQA,gBAAgB,GAAGK,UAAnB;AACA,ADIR,AWAA,AFAA,AFAA,AjBAA,AeAA,ACAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,WbHeA,UAAU,CAACI,GAAD,EAAM,CAAN,CAAjB;AACH,ADIL,AWAA,AFAA,AFAA,AjBAA,AeAA,ACAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA;AdEA,AWAA,AFAA,AFAA,AjBAA,AeAA,ACAA,AJDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA;AbHI,ADKJ,AWAA,AFAA,AFAA,AjBAA,AeAA,AHDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA,MbJQ;AACA,ADKR,AWAA,AFAA,AFAA,AFAA,AHDA,AbCA,AUAA,ADAA,ADAA,ATAA,A0BDA;AbHQ,ADKR,ASAA,AFAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA,WbJeT,gBAAgB,CAACS,GAAD,EAAM,CAAN,CAAvB;AACH,ADKL,ASAA,AFAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA,GbPI,CAGE,OAAMH,CAAN,EAAQ;AACN,ADKR,ASAA,AFAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA,QbJY;AACA,ADKZ,ASAA,AFAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA;AbHY,ADKZ,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA,abJmBN,gBAAgB,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;AACH,ADKT,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA,KbPQ,CAGE,OAAMH,CAAN,EAAQ;AACN,ADKZ,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA;AbHY,ADKZ,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA,abJmBN,gBAAgB,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;AACH,ADKT,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA;AbHK,ADKL,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA;AbDC,ADGD,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA;AdEA,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA;AbFA,ADIA,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA,SbHSE,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,ADIJ,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA,MbHQX,kBAAkB,KAAKM,YAA3B,EAAyC;AACrC,ADIR,AOAA,AFAA,AHDA,AbCA,ASAA,AVAA,A0BDA;AbFQ,ADIR,AOAA,AFAA,AHDA,AbCA,ADAA,A0BDA,WbHeA,YAAY,CAACK,MAAD,CAAnB;AACH,ADIL,AOAA,AFAA,AHDA,AbCA,ADAA,A0BDA,GbPiC,CAK7B;ADIJ,AOAA,AFAA,AHDA,AbCA,ADAA,A0BDA;AdEA,AOAA,AFAA,AHDA,AdCA,A0BDA;AbHI,ADKJ,AOAA,AFAA,AHDA,AdCA,A0BDA,MbJQ,CAACX,kBAAkB,KAAKG,mBAAvB,IAA8C,CAACH,kBAAhD,KAAuEM,YAA3E,EAAyF;AACrFN,ADKR,AOAA,AFAA,AHDA,AdCA,A0BDA,IbJQA,kBAAkB,GAAGM,YAArB;AACA,ADKR,AOAA,AFAA,AHDA,AdCA,A0BDA,WbJeA,YAAY,CAACK,MAAD,CAAnB;AACH,ADKL,AOAA,AFAA,AHDA,AdCA,A0BDA;AdEA,AOAA,AFAA,AHDA,AdCA,A0BDA;AbJI,ADMJ,AOAA,AFAA,AHDA,AdCA,A0BDA,MbLQ;AACA,ADMR,AOAA,AFAA,AHDA,AdCA,A0BDA;AbJQ,ADMR,AOAA,AFAA,AHDA,AdCA,A0BDA,WbLeX,kBAAkB,CAACW,MAAD,CAAzB;AACH,ADML,AOAA,AFAA,AHDA,AdCA,A0BDA,GbRI,CAGE,OAAON,CAAP,EAAS;AACP,ADMR,AOAA,AFAA,AHDA,AdCA,A0BDA,QbLY;AACA,ADMZ,AOAA,AFAA,AHDA,AdCA,A0BDA;AbJY,ADMZ,AOAA,AFAA,AHDA,AdCA,A0BDA,abLmBL,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AACH,ADMT,AOAA,AFAA,AHDA,AdCA,A0BDA,KbRQ,CAGE,OAAON,CAAP,EAAS;AACP,ADMZ,AOAA,AFAA,AHDA,AdCA,A0BDA;AbJY,ADMZ,AEDA,AdCA,A0BDA;AbJY,ADMZ,AEDA,AdCA,A0BDA,abLmBL,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AACH,ADMT,AEDA,AdCA,A0BDA;AbJK,ADML,AEDA,AdCA,A0BDA;AbDC,ADGD,AEDA,AdCA,A0BDA;AdEA,AEDA,AdCA,A0BDA;AbFA,ADIA,AEDA,AdCA,A0BDA,IbHIC,KAAK,GAAG,EAAZ;AACA,ADIA,AEDA,AdCA,A0BDA,IbHIC,QAAQ,GAAG,KAAf;AACA,ADIA,AEDA,AdCA,A0BDA,IbHIC,YAAJ;AACA,ADIA,AEDA,AdCA,A0BDA,IbHIC,UAAU,GAAG,CAAC,CAAlB;ADKA,AEDA,AdCA,A0BDA;AbFA,ADIA,AEDA,AdCA,A0BDA,SbHSC,eAAT,GAA2B;AACvB,ADIJ,AEDA,AdCA,A0BDA,MbHQ,CAACH,QAAD,IAAa,CAACC,YAAlB,EAAgC;AAC5B,ADIR,AZAA,A0BDA;AbFK,ADIL,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbHID,ADKJ,AZAA,A0BDA,EbJIA,QAAQ,GAAG,KAAX;ADMJ,AZAA,A0BDA;AbJI,ADMJ,AZAA,A0BDA,MbLQC,YAAY,CAACG,MAAjB,EAAyB;AACrBL,ADMR,AZAA,A0BDA,IbLQA,KAAK,GAAGE,YAAY,CAACI,MAAb,CAAoBN,KAApB,CAAR;AACH,ADML,AZAA,A0BDA,GbPI,MAEO;AACHG,ADMR,AZAA,A0BDA,IbLQA,UAAU,GAAG,CAAC,CAAd;AACH,ADML,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbLI,ADOJ,AZAA,A0BDA,MbNQH,KAAK,CAACK,MAAV,EAAkB;AACdE,ADOR,AZAA,A0BDA,IbNQA,UAAU;AACb,ADOL,AZAA,A0BDA;AbLC,ADOD,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbLA,ADOA,AZAA,A0BDA,SbNSA,UAAT,GAAsB;AAClB,ADOJ,AZAA,A0BDA,MbNQN,QAAJ,EAAc;AACV,ADOR,AZAA,A0BDA;AbLK,ADOL,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbNI,ADQJ,AZAA,A0BDA,MbPQO,OAAO,GAAGb,UAAU,CAACS,eAAD,CAAxB;AACAH,ADQJ,AZAA,A0BDA,EbPIA,QAAQ,GAAG,IAAX;AAEA,ADOJ,AZAA,A0BDA,MbNQQ,GAAG,GAAGT,KAAK,CAACK,MAAhB;ADQJ,AZAA,A0BDA;AbNI,ADQJ,AZAA,A0BDA,SbPUI,GAAN,EAAW;AACPP,ADQR,AZAA,A0BDA,IbPQA,YAAY,GAAGF,KAAf;AACAA,ADQR,AZAA,A0BDA,IbPQA,KAAK,GAAG,EAAR;ADSR,AZAA,A0BDA;AbPQ,ADSR,AZAA,A0BDA,WbRe,EAAEG,UAAF,GAAeM,GAAtB,EAA2B;AACvB,ADSZ,AZAA,A0BDA,UbRgBP,YAAJ,EAAkB;AACdA,ADShB,AZAA,A0BDA,QbRgBA,YAAY,CAACC,UAAD,CAAZ,CAAyBO,GAAzB;AACH,ADSb,AZAA,A0BDA;AbPS,ADST,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbRQP,ADUR,AZAA,A0BDA,IbTQA,UAAU,GAAG,CAAC,CAAd;AACAM,ADUR,AZAA,A0BDA,IbTQA,GAAG,GAAGT,KAAK,CAACK,MAAZ;AACH,ADUL,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbTIH,ADWJ,AZAA,A0BDA,EbVIA,YAAY,GAAG,IAAf;AACAD,ADWJ,AZAA,A0BDA,EbVIA,QAAQ,GAAG,KAAX;AACAH,ADWJ,AZAA,A0BDA,EbVIA,eAAe,CAACU,OAAD,CAAf;AACH,ADWD,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbTAtB,ADWA,AZAA,A0BDA,ObVO,CAACyB,QAAR,GAAmB,UAAUf,GAAV,EAAe;AAC9B,ADWJ,AZAA,A0BDA,MbVQgB,IAAI,GAAG,IAAIC,KAAJ,CAAUC,SAAS,CAACT,MAAV,GAAmB,CAA7B,CAAX;ADYJ,AZAA,A0BDA;AbVI,ADYJ,AZAA,A0BDA,MbXQS,SAAS,CAACT,MAAV,GAAmB,CAAvB,EAA0B;AACtB,ADYR,AZAA,A0BDA,SbXa,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2C;AACvCH,ADYZ,AZAA,A0BDA,MbXYA,IAAI,CAACG,CAAC,GAAG,CAAL,CAAJ,GAAcD,SAAS,CAACC,CAAD,CAAvB;AACH,ADYT,AZAA,A0BDA;AbVK,ADYL,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbXIf,ADaJ,AZAA,A0BDA,EbZIA,KAAK,CAACgB,IAAN,CAAW,IAAIC,IAAJ,CAASrB,GAAT,EAAcgB,IAAd,CAAX;ADcJ,AZAA,A0BDA;AbZI,ADcJ,AZAA,A0BDA,MbbQZ,KAAK,CAACK,MAAN,KAAiB,CAAjB,IAAsB,CAACJ,QAA3B,EAAqC;AACjCN,ADcR,AZAA,A0BDA,IbbQA,UAAU,CAACY,UAAD,CAAV;AACH,ADcL,AZAA,A0BDA;AbZC,ADcD,AZAA,A0BDA,CbxBA,EAaA;ADaA,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbZA,ADcA,AZAA,A0BDA,SbbSU,IAAT,CAAcrB,GAAd,EAAmBsB,KAAnB,EAA0B;AACtB,ADcJ,AZAA,A0BDA,ObbStB,GAAL,GAAWA,GAAX;AACA,ADcJ,AZAA,A0BDA,ObbSsB,KAAL,GAAaA,KAAb;AACH,ADcD,AZAA,A0BDA;AdEA,AZAA,A0BDA;AbbAD,ADeA,AZAA,A0BDA,IbdI,CAACE,SAAL,CAAeT,GAAf,GAAqB,YAAY;AAC7B,ADeJ,AZAA,A0BDA,ObdSd,GAAL,CAASwB,KAAT,CAAe,IAAf,EAAqB,KAAKF,KAA1B;AACH,ADeD,AZAA,A0BDA,CbhBA;ADkBA,AZAA,A0BDA;AbdAhC,ADgBA,AZAA,A0BDA,ObfO,CAACmC,KAAR,GAAgB,SAAhB;AAEAnC,ADeA,AZAA,A0BDA,ObdO,CAACoC,GAAR,GAAc,EAAd;AACApC,ADeA,AZAA,A0BDA,ObdO,CAACqC,IAAR,GAAe,EAAf;AACArC,ADeA,AZAA,A0BDA,ObdO,CAACsC,OAAR,GAAkB,EAAlB,EAAsB;ADgBtB,AZAA,A0BDA;AbdAtC,AbgBA,A0BDA,ObfO,CAACuC,QAAR,GAAmB,EAAnB;AbiBA,A0BDA;AbdA,AbgBA,A0BDA,SbfSC,IAAT,GAAgB,CAAE;AbiBlB,A0BDA;AbdAxC,AbgBA,A0BDA,ObfO,CAACyC,EAAR,GAAaD,IAAb;AACAxC,AbgBA,A0BDA,ObfO,CAAC0C,WAAR,GAAsBF,IAAtB;AACAxC,AbgBA,A0BDA,ObfO,CAAC2C,IAAR,GAAeH,IAAf;AACAxC,AbgBA,A0BDA,ObfO,CAAC4C,GAAR,GAAcJ,IAAd;AACAxC,AbgBA,A0BDA,ObfO,CAAC6C,cAAR,GAAyBL,IAAzB;AACAxC,AbgBA,A0BDA,ObfO,CAAC8C,kBAAR,GAA6BN,IAA7B;AACAxC,AbgBA,A0BDA,ObfO,CAAC+C,IAAR,GAAeP,IAAf;AACAxC,AbgBA,A0BDA,ObfO,CAACgD,eAAR,GAA0BR,IAA1B;AACAxC,AbgBA,A0BDA,ObfO,CAACiD,mBAAR,GAA8BT,IAA9B;AbiBA,A0BDA;AbdAxC,AbgBA,A0BDA,ObfO,CAACkD,SAAR,GAAoB,UAAUpE,IAAV,EAAgB;AAAE,AbiBtC,A0BDA,SbhB6C,EAAP;AAAW,AbkBjD,A0BDA,CbjBA;AbmBA,A0BDA;AbhBAkB,AbkBA,A0BDA,ObjBO,CAACmD,OAAR,GAAkB,UAAUrE,IAAV,EAAgB;AAC9B,AbkBJ,A0BDA,QbjBU,IAAIsB,KAAJ,CAAU,kCAAV,CAAN;AACH,AbkBD,A0BDA,CbnBA;AbqBA,A0BDA;AbhBAJ,AbkBA,A0BDA,ObjBO,CAACoD,GAAR,GAAc,YAAY;AAAE,AbmB5B,A0BDA,SblBmC,GAAP;AAAY,AboBxC,A0BDA,CbnBA;AbqBA,A0BDA;AbnBApD,AbqBA,A0BDA,ObpBO,CAACqD,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAC3B,AbqBJ,A0BDA,QbpBU,IAAIlD,KAAJ,CAAU,gCAAV,CAAN;AACH,AbqBD,A0BDA,CbtBA;AbwBA,A0BDA;AbpBAJ,AbsBA,A0BDA,ObrBO,CAACuD,KAAR,GAAgB,YAAW;AAAE,AbuB7B,A0BDA,SbtBoC,CAAP;AAAW,AbwBxC,A0BDA,CbvBA;Abyfile":"public.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const Router = function(name, routes) {\r\n  return {\r\n    name,\r\n    routes\r\n  };\r\n};\r\n\r\nexports.router = new Router(\"router\", [\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\"\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    name: \"Register\"\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\"\r\n  },\r\n  {\r\n    path: \"/standing\",\r\n    name: \"Standing\"\r\n  },\r\n  {\r\n    path: \"/stats\",\r\n    name: \"Personal stats\"\r\n  }\r\n]);\r\n","//this is a function that executes simple CRUD operations in the local storage\r\nexports.saveData = function(key, value) {\r\n  localStorage.setItem(key, value);\r\n};\r\nexports.getData = key => {\r\n  return localStorage.getItem(key);\r\n};\r\n\r\nexports.deleteData = function(key) {\r\n  localStorage.removeItem(key);\r\n};\r\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  // Only Node.JS has a process variable that is of [[Class]] process\n  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach([\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength',\n    'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken',\n    'socketPath'\n  ], function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n  config.method = config.method ? config.method.toLowerCase() : 'get';\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","const storage = require(\"./storage\");\r\nconst axios = require(\"axios\");\r\n\r\nexports.sendRequest = function(url, method, data, headers) {\r\n  const baseUrl = \"http://localhost:3000\";\r\n  data = data || {};\r\n  headers = headers || {};\r\n  //if the user is logged in we attach the authorization token to the header;\r\n  if (storage.getData(\"authToken\")) {\r\n    const token = storage.getData(\"authToken\");\r\n    headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  return axios({\r\n    method: method,\r\n    url: `${baseUrl + url}`,\r\n    data: data,\r\n    headers: headers\r\n  });\r\n};\r\n","// name: sammy\n// version: 0.7.6\n\n// Sammy.js / http://sammyjs.org\n\n(function(factory){\n  // Support module loading scenarios\n  if (typeof define === 'function' && define.amd){\n    // AMD Anonymous Module\n    define(['jquery'], factory);\n  } else {\n    // No module loader (plain <script> tag) - put directly in global namespace\n    jQuery.sammy = window.Sammy = factory(jQuery);\n  }\n})(function($){\n\n  var Sammy,\n      PATH_REPLACER = \"([^\\/]+)\",\n      PATH_NAME_MATCHER = /:([\\w\\d]+)/g,\n      QUERY_STRING_MATCHER = /\\?([^#]*)?$/,\n      // mainly for making `arguments` an Array\n      _makeArray = function(nonarray) { return Array.prototype.slice.call(nonarray); },\n      // borrowed from jQuery\n      _isFunction = function( obj ) { return Object.prototype.toString.call(obj) === \"[object Function]\"; },\n      _isArray = function( obj ) { return Object.prototype.toString.call(obj) === \"[object Array]\"; },\n      _isRegExp = function( obj ) { return Object.prototype.toString.call(obj) === \"[object RegExp]\"; },\n      _decode = function( str ) { return decodeURIComponent((str || '').replace(/\\+/g, ' ')); },\n      _encode = encodeURIComponent,\n      _escapeHTML = function(s) {\n        return String(s).replace(/&(?!\\w+;)/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n      },\n      _routeWrapper = function(verb) {\n        return function() {\n          return this.route.apply(this, [verb].concat(Array.prototype.slice.call(arguments)));\n        };\n      },\n      _template_cache = {},\n      _has_history = !!(window.history && history.pushState),\n      loggers = [];\n\n\n  // `Sammy` (also aliased as $.sammy) is not only the namespace for a\n  // number of prototypes, its also a top level method that allows for easy\n  // creation/management of `Sammy.Application` instances. There are a\n  // number of different forms for `Sammy()` but each returns an instance\n  // of `Sammy.Application`. When a new instance is created using\n  // `Sammy` it is added to an Object called `Sammy.apps`. This\n  // provides for an easy way to get at existing Sammy applications. Only one\n  // instance is allowed per `element_selector` so when calling\n  // `Sammy('selector')` multiple times, the first time will create\n  // the application and the following times will extend the application\n  // already added to that selector.\n  //\n  // ### Example\n  //\n  //      // returns the app at #main or a new app\n  //      Sammy('#main')\n  //\n  //      // equivalent to \"new Sammy.Application\", except appends to apps\n  //      Sammy();\n  //      Sammy(function() { ... });\n  //\n  //      // extends the app at '#main' with function.\n  //      Sammy('#main', function() { ... });\n  //\n  Sammy = function() {\n    var args = _makeArray(arguments),\n        app, selector;\n    Sammy.apps = Sammy.apps || {};\n    if (args.length === 0 || args[0] && _isFunction(args[0])) { // Sammy()\n      return Sammy.apply(Sammy, ['body'].concat(args));\n    } else if (typeof (selector = args.shift()) == 'string') { // Sammy('#main')\n      app = Sammy.apps[selector] || new Sammy.Application();\n      app.element_selector = selector;\n      if (args.length > 0) {\n        $.each(args, function(i, plugin) {\n          app.use(plugin);\n        });\n      }\n      // if the selector changes make sure the reference in Sammy.apps changes\n      if (app.element_selector != selector) {\n        delete Sammy.apps[selector];\n      }\n      Sammy.apps[app.element_selector] = app;\n      return app;\n    }\n  };\n\n  Sammy.VERSION = '0.7.6';\n\n  // Add to the global logger pool. Takes a function that accepts an\n  // unknown number of arguments and should print them or send them somewhere\n  // The first argument is always a timestamp.\n  Sammy.addLogger = function(logger) {\n    loggers.push(logger);\n  };\n\n  // Sends a log message to each logger listed in the global\n  // loggers pool. Can take any number of arguments.\n  // Also prefixes the arguments with a timestamp.\n  Sammy.log = function()  {\n    var args = _makeArray(arguments);\n    args.unshift(\"[\" + Date() + \"]\");\n    $.each(loggers, function(i, logger) {\n      logger.apply(Sammy, args);\n    });\n  };\n\n  if (typeof window.console != 'undefined') {\n    if (typeof window.console.log === 'function' && _isFunction(window.console.log.apply)) {\n      Sammy.addLogger(function() {\n        window.console.log.apply(window.console, arguments);\n      });\n    } else {\n      Sammy.addLogger(function() {\n        window.console.log(arguments);\n      });\n    }\n  } else if (typeof console != 'undefined') {\n    Sammy.addLogger(function() {\n      console.log.apply(console, arguments);\n    });\n  }\n\n  $.extend(Sammy, {\n    makeArray: _makeArray,\n    isFunction: _isFunction,\n    isArray: _isArray\n  });\n\n  // Sammy.Object is the base for all other Sammy classes. It provides some useful\n  // functionality, including cloning, iterating, etc.\n  Sammy.Object = function(obj) { // constructor\n    return $.extend(this, obj || {});\n  };\n\n  $.extend(Sammy.Object.prototype, {\n\n    // Escape HTML in string, use in templates to prevent script injection.\n    // Also aliased as `h()`\n    escapeHTML: _escapeHTML,\n    h: _escapeHTML,\n\n    // Returns a copy of the object with Functions removed.\n    toHash: function() {\n      var json = {};\n      $.each(this, function(k,v) {\n        if (!_isFunction(v)) {\n          json[k] = v;\n        }\n      });\n      return json;\n    },\n\n    // Renders a simple HTML version of this Objects attributes.\n    // Does not render functions.\n    // For example. Given this Sammy.Object:\n    //\n    //     var s = new Sammy.Object({first_name: 'Sammy', last_name: 'Davis Jr.'});\n    //     s.toHTML()\n    //     //=> '<strong>first_name</strong> Sammy<br /><strong>last_name</strong> Davis Jr.<br />'\n    //\n    toHTML: function() {\n      var display = \"\";\n      $.each(this, function(k, v) {\n        if (!_isFunction(v)) {\n          display += \"<strong>\" + k + \"</strong> \" + v + \"<br />\";\n        }\n      });\n      return display;\n    },\n\n    // Returns an array of keys for this object. If `attributes_only`\n    // is true will not return keys that map to a `function()`\n    keys: function(attributes_only) {\n      var keys = [];\n      for (var property in this) {\n        if (!_isFunction(this[property]) || !attributes_only) {\n          keys.push(property);\n        }\n      }\n      return keys;\n    },\n\n    // Checks if the object has a value at `key` and that the value is not empty\n    has: function(key) {\n      return this[key] && $.trim(this[key].toString()) !== '';\n    },\n\n    // convenience method to join as many arguments as you want\n    // by the first argument - useful for making paths\n    join: function() {\n      var args = _makeArray(arguments);\n      var delimiter = args.shift();\n      return args.join(delimiter);\n    },\n\n    // Shortcut to Sammy.log\n    log: function() {\n      Sammy.log.apply(Sammy, arguments);\n    },\n\n    // Returns a string representation of this object.\n    // if `include_functions` is true, it will also toString() the\n    // methods of this object. By default only prints the attributes.\n    toString: function(include_functions) {\n      var s = [];\n      $.each(this, function(k, v) {\n        if (!_isFunction(v) || include_functions) {\n          s.push('\"' + k + '\": ' + v.toString());\n        }\n      });\n      return \"Sammy.Object: {\" + s.join(',') + \"}\";\n    }\n  });\n\n\n  // Return whether the event targets this window.\n  Sammy.targetIsThisWindow = function targetIsThisWindow(event, tagName) {\n    var targetElement = $(event.target).closest(tagName);\n    if (targetElement.length === 0) { return true; }\n\n    var targetWindow = targetElement.attr('target');\n    if (!targetWindow || targetWindow === window.name || targetWindow === '_self') { return true; }\n    if (targetWindow === '_blank') { return false; }\n    if (targetWindow === 'top' && window === window.top) { return true; }\n    return false;\n  };\n\n\n  // The DefaultLocationProxy is the default location proxy for all Sammy applications.\n  // A location proxy is a prototype that conforms to a simple interface. The purpose\n  // of a location proxy is to notify the Sammy.Application its bound to when the location\n  // or 'external state' changes.\n  //\n  // The `DefaultLocationProxy` watches for changes to the path of the current window and\n  // is also able to set the path based on changes in the application. It does this by\n  // using different methods depending on what is available in the current browser. In\n  // the latest and greatest browsers it used the HTML5 History API and the `pushState`\n  // `popState` events/methods. This allows you to use Sammy to serve a site behind normal\n  // URI paths as opposed to the older default of hash (#) based routing. Because the server\n  // can interpret the changed path on a refresh or re-entry, though, it requires additional\n  // support on the server side. If you'd like to force disable HTML5 history support, please\n  // use the `disable_push_state` setting on `Sammy.Application`. If pushState support\n  // is enabled, `DefaultLocationProxy` also binds to all links on the page. If a link is clicked\n  // that matches the current set of routes, the URL is changed using pushState instead of\n  // fully setting the location and the app is notified of the change.\n  //\n  // If the browser does not have support for HTML5 History, `DefaultLocationProxy` automatically\n  // falls back to the older hash based routing. The newest browsers (IE, Safari > 4, FF >= 3.6)\n  // support a 'onhashchange' DOM event, thats fired whenever the location.hash changes.\n  // In this situation the DefaultLocationProxy just binds to this event and delegates it to\n  // the application. In the case of older browsers a poller is set up to track changes to the\n  // hash.\n  Sammy.DefaultLocationProxy = function(app, run_interval_every) {\n    this.app = app;\n    // set is native to false and start the poller immediately\n    this.is_native = false;\n    this.has_history = _has_history;\n    this._startPolling(run_interval_every);\n  };\n\n  Sammy.DefaultLocationProxy.fullPath = function(location_obj) {\n   // Bypass the `window.location.hash` attribute.  If a question mark\n    // appears in the hash IE6 will strip it and all of the following\n    // characters from `window.location.hash`.\n    var matches = location_obj.toString().match(/^[^#]*(#.+)$/);\n    var hash = matches ? matches[1] : '';\n    return [location_obj.pathname, location_obj.search, hash].join('');\n  };\n$.extend(Sammy.DefaultLocationProxy.prototype , {\n    // bind the proxy events to the current app.\n    bind: function() {\n      var proxy = this, app = this.app, lp = Sammy.DefaultLocationProxy;\n      $(window).bind('hashchange.' + this.app.eventNamespace(), function(e, non_native) {\n        // if we receive a native hash change event, set the proxy accordingly\n        // and stop polling\n        if (proxy.is_native === false && !non_native) {\n          proxy.is_native = true;\n          window.clearInterval(lp._interval);\n          lp._interval = null;\n        }\n        app.trigger('location-changed');\n      });\n      if (_has_history && !app.disable_push_state) {\n        // bind to popstate\n        $(window).bind('popstate.' + this.app.eventNamespace(), function(e) {\n          app.trigger('location-changed');\n        });\n        // bind to link clicks that have routes\n        $(document).delegate('a', 'click.history-' + this.app.eventNamespace(), function (e) {\n          if (e.isDefaultPrevented() || e.metaKey || e.ctrlKey) {\n            return;\n          }\n          var full_path = lp.fullPath(this),\n            // Get anchor's host name in a cross browser compatible way.\n            // IE looses hostname property when setting href in JS\n            // with a relative URL, e.g. a.setAttribute('href',\"/whatever\").\n            // Circumvent this problem by creating a new link with given URL and\n            // querying that for a hostname.\n            hostname = this.hostname ? this.hostname : function (a) {\n              var l = document.createElement(\"a\");\n              l.href = a.href;\n              return l.hostname;\n            }(this);\n\n          if (hostname == window.location.hostname &&\n              app.lookupRoute('get', full_path) &&\n              Sammy.targetIsThisWindow(e, 'a')) {\n            e.preventDefault();\n            proxy.setLocation(full_path);\n            return false;\n          }\n        });\n      }\n      if (!lp._bindings) {\n        lp._bindings = 0;\n      }\n      lp._bindings++;\n    },\n\n    // unbind the proxy events from the current app\n    unbind: function() {\n      $(window).unbind('hashchange.' + this.app.eventNamespace());\n      $(window).unbind('popstate.' + this.app.eventNamespace());\n      $(document).undelegate('a', 'click.history-' + this.app.eventNamespace());\n      Sammy.DefaultLocationProxy._bindings--;\n      if (Sammy.DefaultLocationProxy._bindings <= 0) {\n        window.clearInterval(Sammy.DefaultLocationProxy._interval);\n        Sammy.DefaultLocationProxy._interval = null;\n      }\n    },\n\n    // get the current location from the hash.\n    getLocation: function() {\n      return Sammy.DefaultLocationProxy.fullPath(window.location);\n    },\n\n    // set the current location to `new_location`\n    setLocation: function(new_location) {\n      if (/^([^#\\/]|$)/.test(new_location)) { // non-prefixed url\n        if (_has_history && !this.app.disable_push_state) {\n          new_location = '/' + new_location;\n        } else {\n          new_location = '#!/' + new_location;\n        }\n      }\n      if (new_location != this.getLocation()) {\n        // HTML5 History exists and new_location is a full path\n        if (_has_history && !this.app.disable_push_state && /^\\//.test(new_location)) {\n          history.pushState({ path: new_location }, window.title, new_location);\n          this.app.trigger('location-changed');\n        } else {\n          return (window.location = new_location);\n        }\n      }\n    },\n\n    _startPolling: function(every) {\n      // set up interval\n      var proxy = this;\n      if (!Sammy.DefaultLocationProxy._interval) {\n        if (!every) { every = 10; }\n        var hashCheck = function() {\n          var current_location = proxy.getLocation();\n          if (typeof Sammy.DefaultLocationProxy._last_location == 'undefined' ||\n            current_location != Sammy.DefaultLocationProxy._last_location) {\n            window.setTimeout(function() {\n              $(window).trigger('hashchange', [true]);\n            }, 0);\n          }\n          Sammy.DefaultLocationProxy._last_location = current_location;\n        };\n        hashCheck();\n        Sammy.DefaultLocationProxy._interval = window.setInterval(hashCheck, every);\n      }\n    }\n  });\n\n\n  // Sammy.Application is the Base prototype for defining 'applications'.\n  // An 'application' is a collection of 'routes' and bound events that is\n  // attached to an element when `run()` is called.\n  // The only argument an 'app_function' is evaluated within the context of the application.\n  Sammy.Application = function(app_function) {\n    var app = this;\n    this.routes            = {};\n    this.listeners         = new Sammy.Object({});\n    this.arounds           = [];\n    this.befores           = [];\n    // generate a unique namespace\n    this.namespace         = (new Date()).getTime() + '-' + parseInt(Math.random() * 1000, 10);\n    this.context_prototype = function() { Sammy.EventContext.apply(this, arguments); };\n    this.context_prototype.prototype = new Sammy.EventContext();\n\n    if (_isFunction(app_function)) {\n      app_function.apply(this, [this]);\n    }\n    // set the location proxy if not defined to the default (DefaultLocationProxy)\n    if (!this._location_proxy) {\n      this.setLocationProxy(new Sammy.DefaultLocationProxy(this, this.run_interval_every));\n    }\n    if (this.debug) {\n      this.bindToAllEvents(function(e, data) {\n        app.log(app.toString(), e.cleaned_type, data || {});\n      });\n    }\n  };\n\n  Sammy.Application.prototype = $.extend({}, Sammy.Object.prototype, {\n\n    // the four route verbs\n    ROUTE_VERBS: ['get','post','put','delete'],\n\n    // An array of the default events triggered by the\n    // application during its lifecycle\n    APP_EVENTS: ['run', 'unload', 'lookup-route', 'run-route', 'route-found', 'event-context-before', 'event-context-after', 'changed', 'error', 'check-form-submission', 'redirect', 'location-changed'],\n\n    _last_route: null,\n    _location_proxy: null,\n    _running: false,\n\n    // Defines what element the application is bound to. Provide a selector\n    // (parseable by `jQuery()`) and this will be used by `$element()`\n    element_selector: 'body',\n\n    // When set to true, logs all of the default events using `log()`\n    debug: false,\n\n    // When set to true, and the error() handler is not overridden, will actually\n    // raise JS errors in routes (500) and when routes can't be found (404)\n    raise_errors: false,\n\n    // The time in milliseconds that the URL is queried for changes\n    run_interval_every: 50,\n\n    // if using the `DefaultLocationProxy` setting this to true will force the app to use\n    // traditional hash based routing as opposed to the new HTML5 PushState support\n    disable_push_state: false,\n\n    // The default template engine to use when using `partial()` in an\n    // `EventContext`. `template_engine` can either be a string that\n    // corresponds to the name of a method/helper on EventContext or it can be a function\n    // that takes two arguments, the content of the unrendered partial and an optional\n    // JS object that contains interpolation data. Template engine is only called/referred\n    // to if the extension of the partial is null or unknown. See `partial()`\n    // for more information\n    template_engine: null,\n\n    // //=> Sammy.Application: body\n    toString: function() {\n      return 'Sammy.Application:' + this.element_selector;\n    },\n\n    // returns a jQuery object of the Applications bound element.\n    $element: function(selector) {\n      return selector ? $(this.element_selector).find(selector) : $(this.element_selector);\n    },\n\n    // `use()` is the entry point for including Sammy plugins.\n    // The first argument to use should be a function() that is evaluated\n    // in the context of the current application, just like the `app_function`\n    // argument to the `Sammy.Application` constructor.\n    //\n    // Any additional arguments are passed to the app function sequentially.\n    //\n    // For much more detail about plugins, check out:\n    // [http://sammyjs.org/docs/plugins](http://sammyjs.org/docs/plugins)\n    //\n    // ### Example\n    //\n    //      var MyPlugin = function(app, prepend) {\n    //\n    //        this.helpers({\n    //          myhelper: function(text) {\n    //            alert(prepend + \" \" + text);\n    //          }\n    //        });\n    //\n    //      };\n    //\n    //      var app = $.sammy(function() {\n    //\n    //        this.use(MyPlugin, 'This is my plugin');\n    //\n    //        this.get('#/', function() {\n    //          this.myhelper('and dont you forget it!');\n    //          //=> Alerts: This is my plugin and dont you forget it!\n    //        });\n    //\n    //      });\n    //\n    // If plugin is passed as a string it assumes your are trying to load\n    // Sammy.\"Plugin\". This is the preferred way of loading core Sammy plugins\n    // as it allows for better error-messaging.\n    //\n    // ### Example\n    //\n    //      $.sammy(function() {\n    //        this.use('Mustache'); //=> Sammy.Mustache\n    //        this.use('Storage'); //=> Sammy.Storage\n    //      });\n    //\n    use: function() {\n      // flatten the arguments\n      var args = _makeArray(arguments),\n          plugin = args.shift(),\n          plugin_name = plugin || '';\n      try {\n        args.unshift(this);\n        if (typeof plugin == 'string') {\n          plugin_name = 'Sammy.' + plugin;\n          plugin = Sammy[plugin];\n        }\n        plugin.apply(this, args);\n      } catch(e) {\n        if (typeof plugin === 'undefined') {\n          this.error(\"Plugin Error: called use() but plugin (\" + plugin_name.toString() + \") is not defined\", e);\n        } else if (!_isFunction(plugin)) {\n          this.error(\"Plugin Error: called use() but '\" + plugin_name.toString() + \"' is not a function\", e);\n        } else {\n          this.error(\"Plugin Error\", e);\n        }\n      }\n      return this;\n    },\n\n    // Sets the location proxy for the current app. By default this is set to\n    // a new `Sammy.DefaultLocationProxy` on initialization. However, you can set\n    // the location_proxy inside you're app function to give your app a custom\n    // location mechanism. See `Sammy.DefaultLocationProxy` and `Sammy.DataLocationProxy`\n    // for examples.\n    //\n    // `setLocationProxy()` takes an initialized location proxy.\n    //\n    // ### Example\n    //\n    //        // to bind to data instead of the default hash;\n    //        var app = $.sammy(function() {\n    //          this.setLocationProxy(new Sammy.DataLocationProxy(this));\n    //        });\n    //\n    setLocationProxy: function(new_proxy) {\n      var original_proxy = this._location_proxy;\n      this._location_proxy = new_proxy;\n      if (this.isRunning()) {\n        if (original_proxy) {\n          // if there is already a location proxy, unbind it.\n          original_proxy.unbind();\n        }\n        this._location_proxy.bind();\n      }\n    },\n\n    // provide log() override for inside an app that includes the relevant application element_selector\n    log: function() {\n      Sammy.log.apply(Sammy, Array.prototype.concat.apply([this.element_selector],arguments));\n    },\n\n\n    // `route()` is the main method for defining routes within an application.\n    // For great detail on routes, check out:\n    // [http://sammyjs.org/docs/routes](http://sammyjs.org/docs/routes)\n    //\n    // This method also has aliases for each of the different verbs (eg. `get()`, `post()`, etc.)\n    //\n    // ### Arguments\n    //\n    // * `verb` A String in the set of ROUTE_VERBS or 'any'. 'any' will add routes for each\n    //    of the ROUTE_VERBS. If only two arguments are passed,\n    //    the first argument is the path, the second is the callback and the verb\n    //    is assumed to be 'any'.\n    // * `path` A Regexp or a String representing the path to match to invoke this verb.\n    // * `callback` A Function that is called/evaluated when the route is run see: `runRoute()`.\n    //    It is also possible to pass a string as the callback, which is looked up as the name\n    //    of a method on the application.\n    //\n    route: function(verb, path) {\n      var app = this, param_names = [], add_route, path_match, callback = Array.prototype.slice.call(arguments,2);\n\n      // if the method signature is just (path, callback)\n      // assume the verb is 'any'\n      if (callback.length === 0 && _isFunction(path)) {\n        callback = [path];\n        path = verb;\n        verb = 'any';\n      }\n\n      verb = verb.toLowerCase(); // ensure verb is lower case\n\n      // if path is a string turn it into a regex\n      if (path.constructor == String) {\n\n        // Needs to be explicitly set because IE will maintain the index unless NULL is returned,\n        // which means that with two consecutive routes that contain params, the second set of params will not be found and end up in splat instead of params\n        // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/RegExp/lastIndex\n        PATH_NAME_MATCHER.lastIndex = 0;\n\n        // find the names\n        while ((path_match = PATH_NAME_MATCHER.exec(path)) !== null) {\n          param_names.push(path_match[1]);\n        }\n        // replace with the path replacement\n        path = new RegExp(path.replace(PATH_NAME_MATCHER, PATH_REPLACER) + \"$\");\n      }\n      // lookup callbacks\n      $.each(callback,function(i,cb){\n        if (typeof(cb) === 'string') {\n          callback[i] = app[cb];\n        }\n      });\n\n      add_route = function(with_verb) {\n        var r = {verb: with_verb, path: path, callback: callback, param_names: param_names};\n        // add route to routes array\n        app.routes[with_verb] = app.routes[with_verb] || [];\n        // place routes in order of definition\n        app.routes[with_verb].push(r);\n      };\n\n      if (verb === 'any') {\n        $.each(this.ROUTE_VERBS, function(i, v) { add_route(v); });\n      } else {\n        add_route(verb);\n      }\n\n      // return the app\n      return this;\n    },\n\n    // Alias for route('get', ...)\n    get: _routeWrapper('get'),\n\n    // Alias for route('post', ...)\n    post: _routeWrapper('post'),\n\n    // Alias for route('put', ...)\n    put: _routeWrapper('put'),\n\n    // Alias for route('delete', ...)\n    del: _routeWrapper('delete'),\n\n    // Alias for route('any', ...)\n    any: _routeWrapper('any'),\n\n    // `mapRoutes` takes an array of arrays, each array being passed to route()\n    // as arguments, this allows for mass definition of routes. Another benefit is\n    // this makes it possible/easier to load routes via remote JSON.\n    //\n    // ### Example\n    //\n    //      var app = $.sammy(function() {\n    //\n    //        this.mapRoutes([\n    //            ['get', '#/', function() { this.log('index'); }],\n    //            // strings in callbacks are looked up as methods on the app\n    //            ['post', '#/create', 'addUser'],\n    //            // No verb assumes 'any' as the verb\n    //            [/dowhatever/, function() { this.log(this.verb, this.path)}];\n    //          ]);\n    //      });\n    //\n    mapRoutes: function(route_array) {\n      var app = this;\n      $.each(route_array, function(i, route_args) {\n        app.route.apply(app, route_args);\n      });\n      return this;\n    },\n\n    // A unique event namespace defined per application.\n    // All events bound with `bind()` are automatically bound within this space.\n    eventNamespace: function() {\n      return ['sammy-app', this.namespace].join('-');\n    },\n\n    // Works just like `jQuery.fn.bind()` with a couple notable differences.\n    //\n    // * It binds all events to the application element\n    // * All events are bound within the `eventNamespace()`\n    // * Events are not actually bound until the application is started with `run()`\n    // * callbacks are evaluated within the context of a Sammy.EventContext\n    //\n    bind: function(name, data, callback) {\n      var app = this;\n      // build the callback\n      // if the arity is 2, callback is the second argument\n      if (typeof callback == 'undefined') { callback = data; }\n      var listener_callback =  function() {\n        // pull off the context from the arguments to the callback\n        var e, context, data;\n        e       = arguments[0];\n        data    = arguments[1];\n        if (data && data.context) {\n          context = data.context;\n          delete data.context;\n        } else {\n          context = new app.context_prototype(app, 'bind', e.type, data, e.target);\n        }\n        e.cleaned_type = e.type.replace(app.eventNamespace(), '');\n        callback.apply(context, [e, data]);\n      };\n\n      // it could be that the app element doesnt exist yet\n      // so attach to the listeners array and then run()\n      // will actually bind the event.\n      if (!this.listeners[name]) { this.listeners[name] = []; }\n      this.listeners[name].push(listener_callback);\n      if (this.isRunning()) {\n        // if the app is running\n        // *actually* bind the event to the app element\n        this._listen(name, listener_callback);\n      }\n      return this;\n    },\n\n    // Triggers custom events defined with `bind()`\n    //\n    // ### Arguments\n    //\n    // * `name` The name of the event. Automatically prefixed with the `eventNamespace()`\n    // * `data` An optional Object that can be passed to the bound callback.\n    // * `context` An optional context/Object in which to execute the bound callback.\n    //   If no context is supplied a the context is a new `Sammy.EventContext`\n    //\n    trigger: function(name, data) {\n      this.$element().trigger([name, this.eventNamespace()].join('.'), [data]);\n      return this;\n    },\n\n    // Reruns the current route\n    refresh: function() {\n      this.last_location = null;\n      this.trigger('location-changed');\n      return this;\n    },\n\n    // Takes a single callback that is pushed on to a stack.\n    // Before any route is run, the callbacks are evaluated in order within\n    // the current `Sammy.EventContext`\n    //\n    // If any of the callbacks explicitly return false, execution of any\n    // further callbacks and the route itself is halted.\n    //\n    // You can also provide a set of options that will define when to run this\n    // before based on the route it proceeds.\n    //\n    // ### Example\n    //\n    //      var app = $.sammy(function() {\n    //\n    //        // will run at #/route but not at #/\n    //        this.before('#/route', function() {\n    //          //...\n    //        });\n    //\n    //        // will run at #/ but not at #/route\n    //        this.before({except: {path: '#/route'}}, function() {\n    //          this.log('not before #/route');\n    //        });\n    //\n    //        this.get('#/', function() {});\n    //\n    //        this.get('#/route', function() {});\n    //\n    //      });\n    //\n    // See `contextMatchesOptions()` for a full list of supported options\n    //\n    before: function(options, callback) {\n      if (_isFunction(options)) {\n        callback = options;\n        options = {};\n      }\n      this.befores.push([options, callback]);\n      return this;\n    },\n\n    // A shortcut for binding a callback to be run after a route is executed.\n    // After callbacks have no guarunteed order.\n    after: function(callback) {\n      return this.bind('event-context-after', callback);\n    },\n\n\n    // Adds an around filter to the application. around filters are functions\n    // that take a single argument `callback` which is the entire route\n    // execution path wrapped up in a closure. This means you can decide whether\n    // or not to proceed with execution by not invoking `callback` or,\n    // more usefully wrapping callback inside the result of an asynchronous execution.\n    //\n    // ### Example\n    //\n    // The most common use case for around() is calling a _possibly_ async function\n    // and executing the route within the functions callback:\n    //\n    //      var app = $.sammy(function() {\n    //\n    //        var current_user = false;\n    //\n    //        function checkLoggedIn(callback) {\n    //          // /session returns a JSON representation of the logged in user\n    //          // or an empty object\n    //          if (!current_user) {\n    //            $.getJSON('/session', function(json) {\n    //              if (json.login) {\n    //                // show the user as logged in\n    //                current_user = json;\n    //                // execute the route path\n    //                callback();\n    //              } else {\n    //                // show the user as not logged in\n    //                current_user = false;\n    //                // the context of aroundFilters is an EventContext\n    //                this.redirect('#/login');\n    //              }\n    //            });\n    //          } else {\n    //            // execute the route path\n    //            callback();\n    //          }\n    //        };\n    //\n    //        this.around(checkLoggedIn);\n    //\n    //      });\n    //\n    around: function(callback) {\n      this.arounds.push(callback);\n      return this;\n    },\n\n    // Adds a onComplete function to the application. onComplete functions are executed\n    // at the end of a chain of route callbacks, if they call next(). Unlike after,\n    // which is called as soon as the route is complete, onComplete is like a final next()\n    // for all routes, and is thus run asynchronously\n    //\n    // ### Example\n    //\n    //      app.get('/chain',function(context,next) {\n    //          console.log('chain1');\n    //          next();\n    //      },function(context,next) {\n    //          console.log('chain2');\n    //          next();\n    //      });\n    //\n    //      app.get('/link',function(context,next) {\n    //          console.log('link1');\n    //          next();\n    //      },function(context,next) {\n    //          console.log('link2');\n    //          next();\n    //      });\n    //\n    //      app.onComplete(function() {\n    //          console.log(\"Running finally\");\n    //      });\n    //\n    // If you go to '/chain', you will get the following messages:\n    //\n    //      chain1\n    //      chain2\n    //      Running onComplete\n    //\n    //\n    // If you go to /link, you will get the following messages:\n    //\n    //      link1\n    //      link2\n    //      Running onComplete\n    //\n    //\n    // It really comes to play when doing asynchronous:\n    //\n    //      app.get('/chain',function(context,next) {\n    //        $.get('/my/url',function() {\n    //          console.log('chain1');\n    //          next();\n    //        });\n    //      },function(context,next) {\n    //        console.log('chain2');\n    //        next();\n    //      });\n    //\n    onComplete: function(callback) {\n      this._onComplete = callback;\n      return this;\n    },\n\n    // Returns `true` if the current application is running.\n    isRunning: function() {\n      return this._running;\n    },\n\n    // Helpers extends the EventContext prototype specific to this app.\n    // This allows you to define app specific helper functions that can be used\n    // whenever you're inside of an event context (templates, routes, bind).\n    //\n    // ### Example\n    //\n    //     var app = $.sammy(function() {\n    //\n    //       helpers({\n    //         upcase: function(text) {\n    //          return text.toString().toUpperCase();\n    //         }\n    //       });\n    //\n    //       get('#/', function() { with(this) {\n    //         // inside of this context I can use the helpers\n    //         $('#main').html(upcase($('#main').text());\n    //       }});\n    //\n    //     });\n    //\n    //\n    // ### Arguments\n    //\n    // * `extensions` An object collection of functions to extend the context.\n    //\n    helpers: function(extensions) {\n      $.extend(this.context_prototype.prototype, extensions);\n      return this;\n    },\n\n    // Helper extends the event context just like `helpers()` but does it\n    // a single method at a time. This is especially useful for dynamically named\n    // helpers\n    //\n    // ### Example\n    //\n    //     // Trivial example that adds 3 helper methods to the context dynamically\n    //     var app = $.sammy(function(app) {\n    //\n    //       $.each([1,2,3], function(i, num) {\n    //         app.helper('helper' + num, function() {\n    //           this.log(\"I'm helper number \" + num);\n    //         });\n    //       });\n    //\n    //       this.get('#/', function() {\n    //         this.helper2(); //=> I'm helper number 2\n    //       });\n    //     });\n    //\n    // ### Arguments\n    //\n    // * `name` The name of the method\n    // * `method` The function to be added to the prototype at `name`\n    //\n    helper: function(name, method) {\n      this.context_prototype.prototype[name] = method;\n      return this;\n    },\n\n    // Actually starts the application's lifecycle. `run()` should be invoked\n    // within a document.ready block to ensure the DOM exists before binding events, etc.\n    //\n    // ### Example\n    //\n    //     var app = $.sammy(function() { ... }); // your application\n    //     $(function() { // document.ready\n    //        app.run();\n    //     });\n    //\n    // ### Arguments\n    //\n    // * `start_url` Optionally, a String can be passed which the App will redirect to\n    //   after the events/routes have been bound.\n    run: function(start_url) {\n      if (this.isRunning()) { return false; }\n      var app = this;\n\n      // actually bind all the listeners\n      $.each(this.listeners.toHash(), function(name, callbacks) {\n        $.each(callbacks, function(i, listener_callback) {\n          app._listen(name, listener_callback);\n        });\n      });\n\n      this.trigger('run', {start_url: start_url});\n      this._running = true;\n      // set last location\n      this.last_location = null;\n      if (!(/\\#(.+)/.test(this.getLocation())) && typeof start_url != 'undefined') {\n        this.setLocation(start_url);\n      }\n      // check url\n      this._checkLocation();\n      this._location_proxy.bind();\n      this.bind('location-changed', function() {\n        app._checkLocation();\n      });\n\n      // bind to submit to capture post/put/delete routes\n      this.bind('submit', function(e) {\n        if ( !Sammy.targetIsThisWindow(e, 'form') ) { return true; }\n        var returned = app._checkFormSubmission($(e.target).closest('form'));\n        return (returned === false) ? e.preventDefault() : false;\n      });\n\n      // bind unload to body unload\n      $(window).bind('unload', function() {\n        app.unload();\n      });\n\n      // trigger html changed\n      return this.trigger('changed');\n    },\n\n    // The opposite of `run()`, un-binds all event listeners and intervals\n    // `run()` Automatically binds a `onunload` event to run this when\n    // the document is closed.\n    unload: function() {\n      if (!this.isRunning()) { return false; }\n      var app = this;\n      this.trigger('unload');\n      // clear interval\n      this._location_proxy.unbind();\n      // unbind form submits\n      this.$element().unbind('submit').removeClass(app.eventNamespace());\n      // unbind all events\n      $.each(this.listeners.toHash() , function(name, listeners) {\n        $.each(listeners, function(i, listener_callback) {\n          app._unlisten(name, listener_callback);\n        });\n      });\n      this._running = false;\n      return this;\n    },\n\n    // Not only runs `unbind` but also destroys the app reference.\n    destroy: function() {\n      this.unload();\n      delete Sammy.apps[this.element_selector];\n      return this;\n    },\n\n    // Will bind a single callback function to every event that is already\n    // being listened to in the app. This includes all the `APP_EVENTS`\n    // as well as any custom events defined with `bind()`.\n    //\n    // Used internally for debug logging.\n    bindToAllEvents: function(callback) {\n      var app = this;\n      // bind to the APP_EVENTS first\n      $.each(this.APP_EVENTS, function(i, e) {\n        app.bind(e, callback);\n      });\n      // next, bind to listener names (only if they dont exist in APP_EVENTS)\n      $.each(this.listeners.keys(true), function(i, name) {\n        if ($.inArray(name, app.APP_EVENTS) == -1) {\n          app.bind(name, callback);\n        }\n      });\n      return this;\n    },\n\n    // Returns a copy of the given path with any query string after the hash\n    // removed.\n    routablePath: function(path) {\n      return path.replace(QUERY_STRING_MATCHER, '');\n    },\n\n    // Given a verb and a String path, will return either a route object or false\n    // if a matching route can be found within the current defined set.\n    lookupRoute: function(verb, path) {\n      var app = this, routed = false, i = 0, l, route;\n      if (typeof this.routes[verb] != 'undefined') {\n        l = this.routes[verb].length;\n        for (; i < l; i++) {\n          route = this.routes[verb][i];\n          if (app.routablePath(path).match(route.path)) {\n            routed = route;\n            break;\n          }\n        }\n      }\n      return routed;\n    },\n\n    // First, invokes `lookupRoute()` and if a route is found, parses the\n    // possible URL params and then invokes the route's callback within a new\n    // `Sammy.EventContext`. If the route can not be found, it calls\n    // `notFound()`. If `raise_errors` is set to `true` and\n    // the `error()` has not been overridden, it will throw an actual JS\n    // error.\n    //\n    // You probably will never have to call this directly.\n    //\n    // ### Arguments\n    //\n    // * `verb` A String for the verb.\n    // * `path` A String path to lookup.\n    // * `params` An Object of Params pulled from the URI or passed directly.\n    //\n    // ### Returns\n    //\n    // Either returns the value returned by the route callback or raises a 404 Not Found error.\n    //\n    runRoute: function(verb, path, params, target) {\n      var app = this,\n          route = this.lookupRoute(verb, path),\n          context,\n          wrapped_route,\n          arounds,\n          around,\n          befores,\n          before,\n          callback_args,\n          path_params,\n          final_returned;\n\n      if (this.debug) {\n        this.log('runRoute', [verb, path].join(' '));\n      }\n\n      this.trigger('run-route', {verb: verb, path: path, params: params});\n      if (typeof params == 'undefined') { params = {}; }\n\n      $.extend(params, this._parseQueryString(path));\n\n      if (route) {\n        this.trigger('route-found', {route: route});\n        // pull out the params from the path\n        if ((path_params = route.path.exec(this.routablePath(path))) !== null) {\n          // first match is the full path\n          path_params.shift();\n          // for each of the matches\n          $.each(path_params, function(i, param) {\n            // if theres a matching param name\n            if (route.param_names[i]) {\n              // set the name to the match\n              params[route.param_names[i]] = _decode(param);\n            } else {\n              // initialize 'splat'\n              if (!params.splat) { params.splat = []; }\n              params.splat.push(_decode(param));\n            }\n          });\n        }\n\n        // set event context\n        context  = new this.context_prototype(this, verb, path, params, target);\n        // ensure arrays\n        arounds = this.arounds.slice(0);\n        befores = this.befores.slice(0);\n        // set the callback args to the context + contents of the splat\n        callback_args = [context];\n        if (params.splat) {\n          callback_args = callback_args.concat(params.splat);\n        }\n        // wrap the route up with the before filters\n        wrapped_route = function() {\n          var returned, i, nextRoute;\n          while (befores.length > 0) {\n            before = befores.shift();\n            // check the options\n            if (app.contextMatchesOptions(context, before[0])) {\n              returned = before[1].apply(context, [context]);\n              if (returned === false) { return false; }\n            }\n          }\n          app.last_route = route;\n          context.trigger('event-context-before', {context: context});\n          // run multiple callbacks\n          if (typeof(route.callback) === \"function\") {\n            route.callback = [route.callback];\n          }\n          if (route.callback && route.callback.length) {\n            i = -1;\n            nextRoute = function() {\n              i++;\n              if (route.callback[i]) {\n                returned = route.callback[i].apply(context,callback_args);\n              } else if (app._onComplete && typeof(app._onComplete === \"function\")) {\n                app._onComplete(context);\n              }\n            };\n            callback_args.push(nextRoute);\n            nextRoute();\n          }\n          context.trigger('event-context-after', {context: context});\n          return returned;\n        };\n        $.each(arounds.reverse(), function(i, around) {\n          var last_wrapped_route = wrapped_route;\n          wrapped_route = function() { return around.apply(context, [last_wrapped_route]); };\n        });\n        try {\n          final_returned = wrapped_route();\n        } catch(e) {\n          this.error(['500 Error', verb, path].join(' '), e);\n        }\n        return final_returned;\n      } else {\n        return this.notFound(verb, path);\n      }\n    },\n\n    // Matches an object of options against an `EventContext` like object that\n    // contains `path` and `verb` attributes. Internally Sammy uses this\n    // for matching `before()` filters against specific options. You can set the\n    // object to _only_ match certain paths or verbs, or match all paths or verbs _except_\n    // those that match the options.\n    //\n    // ### Example\n    //\n    //     var app = $.sammy(),\n    //         context = {verb: 'get', path: '#/mypath'};\n    //\n    //     // match against a path string\n    //     app.contextMatchesOptions(context, '#/mypath'); //=> true\n    //     app.contextMatchesOptions(context, '#/otherpath'); //=> false\n    //     // equivalent to\n    //     app.contextMatchesOptions(context, {only: {path:'#/mypath'}}); //=> true\n    //     app.contextMatchesOptions(context, {only: {path:'#/otherpath'}}); //=> false\n    //     // match against a path regexp\n    //     app.contextMatchesOptions(context, /path/); //=> true\n    //     app.contextMatchesOptions(context, /^path/); //=> false\n    //     // match only a verb\n    //     app.contextMatchesOptions(context, {only: {verb:'get'}}); //=> true\n    //     app.contextMatchesOptions(context, {only: {verb:'post'}}); //=> false\n    //     // match all except a verb\n    //     app.contextMatchesOptions(context, {except: {verb:'post'}}); //=> true\n    //     app.contextMatchesOptions(context, {except: {verb:'get'}}); //=> false\n    //     // match all except a path\n    //     app.contextMatchesOptions(context, {except: {path:'#/otherpath'}}); //=> true\n    //     app.contextMatchesOptions(context, {except: {path:'#/mypath'}}); //=> false\n    //     // match all except a verb and a path\n    //     app.contextMatchesOptions(context, {except: {path:'#/otherpath', verb:'post'}}); //=> true\n    //     app.contextMatchesOptions(context, {except: {path:'#/mypath', verb:'post'}}); //=> true\n    //     app.contextMatchesOptions(context, {except: {path:'#/mypath', verb:'get'}}); //=> false\n    //     // match multiple paths\n    //     app.contextMatchesOptions(context, {path: ['#/mypath', '#/otherpath']}); //=> true\n    //     app.contextMatchesOptions(context, {path: ['#/otherpath', '#/thirdpath']}); //=> false\n    //     // equivalent to\n    //     app.contextMatchesOptions(context, {only: {path: ['#/mypath', '#/otherpath']}}); //=> true\n    //     app.contextMatchesOptions(context, {only: {path: ['#/otherpath', '#/thirdpath']}}); //=> false\n    //     // match all except multiple paths\n    //     app.contextMatchesOptions(context, {except: {path: ['#/mypath', '#/otherpath']}}); //=> false\n    //     app.contextMatchesOptions(context, {except: {path: ['#/otherpath', '#/thirdpath']}}); //=> true\n    //     // match all except multiple paths and verbs\n    //     app.contextMatchesOptions(context, {except: {path: ['#/mypath', '#/otherpath'], verb: ['get', 'post']}}); //=> false\n    //     app.contextMatchesOptions(context, {except: {path: ['#/otherpath', '#/thirdpath'], verb: ['get', 'post']}}); //=> true\n    //\n    contextMatchesOptions: function(context, match_options, positive) {\n      var options = match_options;\n      // normalize options\n      if (typeof options === 'string' || _isRegExp(options)) {\n        options = {path: options};\n      }\n      if (typeof positive === 'undefined') {\n        positive = true;\n      }\n      // empty options always match\n      if ($.isEmptyObject(options)) {\n        return true;\n      }\n      // Do we have to match against multiple paths?\n      if (_isArray(options.path)){\n        var results, numopt, opts, len;\n        results = [];\n        for (numopt = 0, len = options.path.length; numopt < len; numopt += 1) {\n          opts = $.extend({}, options, {path: options.path[numopt]});\n          results.push(this.contextMatchesOptions(context, opts));\n        }\n        var matched = $.inArray(true, results) > -1 ? true : false;\n        return positive ? matched : !matched;\n      }\n      if (options.only) {\n        return this.contextMatchesOptions(context, options.only, true);\n      } else if (options.except) {\n        return this.contextMatchesOptions(context, options.except, false);\n      }\n      var path_matched = true, verb_matched = true;\n      if (options.path) {\n        if (!_isRegExp(options.path)) {\n          options.path = new RegExp(options.path.toString() + '$');\n        }\n        path_matched = options.path.test(context.path);\n      }\n      if (options.verb) {\n        if(typeof options.verb === 'string') {\n          verb_matched = options.verb === context.verb;\n        } else {\n          verb_matched = options.verb.indexOf(context.verb) > -1;\n        }\n      }\n      return positive ? (verb_matched && path_matched) : !(verb_matched && path_matched);\n    },\n\n\n    // Delegates to the `location_proxy` to get the current location.\n    // See `Sammy.DefaultLocationProxy` for more info on location proxies.\n    getLocation: function() {\n      return this._location_proxy.getLocation();\n    },\n\n    // Delegates to the `location_proxy` to set the current location.\n    // See `Sammy.DefaultLocationProxy` for more info on location proxies.\n    //\n    // ### Arguments\n    //\n    // * `new_location` A new location string (e.g. '#/')\n    //\n    setLocation: function(new_location) {\n      return this._location_proxy.setLocation(new_location);\n    },\n\n    // Swaps the content of `$element()` with `content`\n    // You can override this method to provide an alternate swap behavior\n    // for `EventContext.partial()`.\n    //\n    // ### Example\n    //\n    //      var app = $.sammy(function() {\n    //\n    //        // implements a 'fade out'/'fade in'\n    //        this.swap = function(content, callback) {\n    //          var context = this;\n    //          context.$element().fadeOut('slow', function() {\n    //            context.$element().html(content);\n    //            context.$element().fadeIn('slow', function() {\n    //              if (callback) {\n    //                callback.apply();\n    //              }\n    //            });\n    //          });\n    //        };\n    //\n    //      });\n    //\n    swap: function(content, callback) {\n      var $el = this.$element().html(content);\n      if (_isFunction(callback)) { callback(content); }\n      return $el;\n    },\n\n    // a simple global cache for templates. Uses the same semantics as\n    // `Sammy.Cache` and `Sammy.Storage` so can easily be replaced with\n    // a persistent storage that lasts beyond the current request.\n    templateCache: function(key, value) {\n      if (typeof value != 'undefined') {\n        return _template_cache[key] = value;\n      } else {\n        return _template_cache[key];\n      }\n    },\n\n    // clear the templateCache\n    clearTemplateCache: function() {\n      return (_template_cache = {});\n    },\n\n    // This throws a '404 Not Found' error by invoking `error()`.\n    // Override this method or `error()` to provide custom\n    // 404 behavior (i.e redirecting to / or showing a warning)\n    notFound: function(verb, path) {\n      var ret = this.error(['404 Not Found', verb, path].join(' '));\n      return (verb === 'get') ? ret : true;\n    },\n\n    // The base error handler takes a string `message` and an `Error`\n    // object. If `raise_errors` is set to `true` on the app level,\n    // this will re-throw the error to the browser. Otherwise it will send the error\n    // to `log()`. Override this method to provide custom error handling\n    // e.g logging to a server side component or displaying some feedback to the\n    // user.\n    error: function(message, original_error) {\n      if (!original_error) { original_error = new Error(); }\n      original_error.message = [message, original_error.message].join(' ');\n      this.trigger('error', {message: original_error.message, error: original_error});\n      if (this.raise_errors) {\n        throw(original_error);\n      } else {\n        this.log(original_error.message, original_error);\n      }\n    },\n\n    _checkLocation: function() {\n      var location, returned;\n      // get current location\n      location = this.getLocation();\n      // compare to see if hash has changed\n      if (!this.last_location || this.last_location[0] != 'get' || this.last_location[1] != location) {\n        // reset last location\n        this.last_location = ['get', location];\n        // lookup route for current hash\n        returned = this.runRoute('get', location);\n      }\n      return returned;\n    },\n\n    _getFormVerb: function(form) {\n      var $form = $(form), verb, $_method;\n      $_method = $form.find('input[name=\"_method\"]');\n      if ($_method.length > 0) { verb = $_method.val(); }\n      if (!verb) { verb = $form[0].getAttribute('method'); }\n      if (!verb || verb === '') { verb = 'get'; }\n      return $.trim(verb.toString().toLowerCase());\n    },\n\n    _checkFormSubmission: function(form) {\n      var $form, path, verb, params, returned;\n      this.trigger('check-form-submission', {form: form});\n      $form = $(form);\n      path  = $form.attr('action') || '';\n      verb  = this._getFormVerb($form);\n\n      if (this.debug) {\n        this.log('_checkFormSubmission', $form, path, verb);\n      }\n\n      if (verb === 'get') {\n        params = this._serializeFormParams($form);\n        if (params !== '') { path += '?' + params; }\n        this.setLocation(path);\n        returned = false;\n      } else {\n        params = $.extend({}, this._parseFormParams($form));\n        returned = this.runRoute(verb, path, params, form.get(0));\n      }\n      return (typeof returned == 'undefined') ? false : returned;\n    },\n\n    _serializeFormParams: function($form) {\n       var queryString = \"\",\n         fields = $form.serializeArray(),\n         i;\n       if (fields.length > 0) {\n         queryString = this._encodeFormPair(fields[0].name, fields[0].value);\n         for (i = 1; i < fields.length; i++) {\n           queryString = queryString + \"&\" + this._encodeFormPair(fields[i].name, fields[i].value);\n         }\n       }\n       return queryString;\n    },\n\n    _encodeFormPair: function(name, value){\n      return _encode(name) + \"=\" + _encode(value);\n    },\n\n    _parseFormParams: function($form) {\n      var params = {},\n          form_fields = $form.serializeArray(),\n          i;\n      for (i = 0; i < form_fields.length; i++) {\n        params = this._parseParamPair(params, form_fields[i].name, form_fields[i].value);\n      }\n      return params;\n    },\n\n    _parseQueryString: function(path) {\n      var params = {}, parts, pairs, pair, i;\n\n      parts = path.match(QUERY_STRING_MATCHER);\n      if (parts && parts[1]) {\n        pairs = parts[1].split('&');\n        for (i = 0; i < pairs.length; i++) {\n          pair = pairs[i].split('=');\n          params = this._parseParamPair(params, _decode(pair[0]), _decode(pair[1] || \"\"));\n        }\n      }\n      return params;\n    },\n\n    _parseParamPair: function(params, key, value) {\n      if (typeof params[key] !== 'undefined') {\n        if (_isArray(params[key])) {\n          params[key].push(value);\n        } else {\n          params[key] = [params[key], value];\n        }\n      } else {\n        params[key] = value;\n      }\n      return params;\n    },\n\n    _listen: function(name, callback) {\n      return this.$element().bind([name, this.eventNamespace()].join('.'), callback);\n    },\n\n    _unlisten: function(name, callback) {\n      return this.$element().unbind([name, this.eventNamespace()].join('.'), callback);\n    }\n\n  });\n\n  // `Sammy.RenderContext` is an object that makes sequential template loading,\n  // rendering and interpolation seamless even when dealing with asynchronous\n  // operations.\n  //\n  // `RenderContext` objects are not usually created directly, rather they are\n  // instantiated from an `Sammy.EventContext` by using `render()`, `load()` or\n  // `partial()` which all return `RenderContext` objects.\n  //\n  // `RenderContext` methods always returns a modified `RenderContext`\n  // for chaining (like jQuery itself).\n  //\n  // The core magic is in the `then()` method which puts the callback passed as\n  // an argument into a queue to be executed once the previous callback is complete.\n  // All the methods of `RenderContext` are wrapped in `then()` which allows you\n  // to queue up methods by chaining, but maintaining a guaranteed execution order\n  // even with remote calls to fetch templates.\n  //\n  Sammy.RenderContext = function(event_context) {\n    this.event_context    = event_context;\n    this.callbacks        = [];\n    this.previous_content = null;\n    this.content          = null;\n    this.next_engine      = false;\n    this.waiting          = false;\n  };\n\n  Sammy.RenderContext.prototype = $.extend({}, Sammy.Object.prototype, {\n\n    // The \"core\" of the `RenderContext` object, adds the `callback` to the\n    // queue. If the context is `waiting` (meaning an async operation is happening)\n    // then the callback will be executed in order, once the other operations are\n    // complete. If there is no currently executing operation, the `callback`\n    // is executed immediately.\n    //\n    // The value returned from the callback is stored in `content` for the\n    // subsequent operation. If you return `false`, the queue will pause, and\n    // the next callback in the queue will not be executed until `next()` is\n    // called. This allows for the guaranteed order of execution while working\n    // with async operations.\n    //\n    // If then() is passed a string instead of a function, the string is looked\n    // up as a helper method on the event context.\n    //\n    // ### Example\n    //\n    //      this.get('#/', function() {\n    //        // initialize the RenderContext\n    //        // Even though `load()` executes async, the next `then()`\n    //        // wont execute until the load finishes\n    //        this.load('myfile.txt')\n    //            .then(function(content) {\n    //              // the first argument to then is the content of the\n    //              // prev operation\n    //              $('#main').html(content);\n    //            });\n    //      });\n    //\n    then: function(callback) {\n      if (!_isFunction(callback)) {\n        // if a string is passed to then, assume we want to call\n        // a helper on the event context in its context\n        if (typeof callback === 'string' && callback in this.event_context) {\n          var helper = this.event_context[callback];\n          callback = function(content) {\n            return helper.apply(this.event_context, [content]);\n          };\n        } else {\n          return this;\n        }\n      }\n      var context = this;\n      if (this.waiting) {\n        this.callbacks.push(callback);\n      } else {\n        this.wait();\n        window.setTimeout(function() {\n          var returned = callback.apply(context, [context.content, context.previous_content]);\n          if (returned !== false) {\n            context.next(returned);\n          }\n        }, 0);\n      }\n      return this;\n    },\n\n    // Pause the `RenderContext` queue. Combined with `next()` allows for async\n    // operations.\n    //\n    // ### Example\n    //\n    //        this.get('#/', function() {\n    //          this.load('mytext.json')\n    //              .then(function(content) {\n    //                var context = this,\n    //                    data    = JSON.parse(content);\n    //                // pause execution\n    //                context.wait();\n    //                // post to a url\n    //                $.post(data.url, {}, function(response) {\n    //                  context.next(JSON.parse(response));\n    //                });\n    //              })\n    //              .then(function(data) {\n    //                // data is json from the previous post\n    //                $('#message').text(data.status);\n    //              });\n    //        });\n    wait: function() {\n      this.waiting = true;\n    },\n\n    // Resume the queue, setting `content` to be used in the next operation.\n    // See `wait()` for an example.\n    next: function(content) {\n      this.waiting = false;\n      if (typeof content !== 'undefined') {\n        this.previous_content = this.content;\n        this.content = content;\n      }\n      if (this.callbacks.length > 0) {\n        this.then(this.callbacks.shift());\n      }\n    },\n\n    // Load a template into the context.\n    // The `location` can either be a string specifying the remote path to the\n    // file, a jQuery object, or a DOM element.\n    //\n    // No interpolation happens by default, the content is stored in\n    // `content`.\n    //\n    // In the case of a path, unless the option `{cache: false}` is passed the\n    // data is stored in the app's `templateCache()`.\n    //\n    // If a jQuery or DOM object is passed the `innerHTML` of the node is pulled in.\n    // This is useful for nesting templates as part of the initial page load wrapped\n    // in invisible elements or `<script>` tags. With template paths, the template\n    // engine is looked up by the extension. For DOM/jQuery embedded templates,\n    // this isnt possible, so there are a couple of options:\n    //\n    //  * pass an `{engine:}` option.\n    //  * define the engine in the `data-engine` attribute of the passed node.\n    //  * just store the raw template data and use `interpolate()` manually\n    //\n    // If a `callback` is passed it is executed after the template load.\n    load: function(location, options, callback) {\n      var context = this;\n      return this.then(function() {\n        var should_cache, cached, is_json, location_array;\n        if (_isFunction(options)) {\n          callback = options;\n          options = {};\n        } else {\n          options = $.extend({}, options);\n        }\n        if (callback) { this.then(callback); }\n        if (typeof location === 'string') {\n          // it's a path\n          is_json      = (location.match(/\\.json(\\?|$)/) || options.json);\n          should_cache = is_json ? options.cache === true : options.cache !== false;\n          context.next_engine = context.event_context.engineFor(location);\n          delete options.cache;\n          delete options.json;\n          if (options.engine) {\n            context.next_engine = options.engine;\n            delete options.engine;\n          }\n          if (should_cache && (cached = this.event_context.app.templateCache(location))) {\n            return cached;\n          }\n          this.wait();\n          $.ajax($.extend({\n            url: location,\n            data: {},\n            dataType: is_json ? 'json' : 'text',\n            type: 'get',\n            success: function(data) {\n              if (should_cache) {\n                context.event_context.app.templateCache(location, data);\n              }\n              context.next(data);\n            }\n          }, options));\n          return false;\n        } else {\n          // it's a dom/jQuery\n          if (location.nodeType) {\n            return location.innerHTML;\n          }\n          if (location.selector) {\n            // it's a jQuery\n            context.next_engine = location.attr('data-engine');\n            if (options.clone === false) {\n              return location.remove()[0].innerHTML.toString();\n            } else {\n              return location[0].innerHTML.toString();\n            }\n          }\n        }\n      });\n    },\n\n    // Load partials\n    //\n    // ### Example\n    //\n    //      this.loadPartials({mypartial: '/path/to/partial'});\n    //\n    loadPartials: function(partials) {\n      var name;\n      if(partials) {\n        this.partials = this.partials || {};\n        for(name in partials) {\n          (function(context, name) {\n            context.load(partials[name])\n                   .then(function(template) {\n                     this.partials[name] = template;\n                   });\n          })(this, name);\n        }\n      }\n      return this;\n    },\n\n    // `load()` a template and then `interpolate()` it with data.\n    //\n    // can be called with multiple different signatures:\n    //\n    //      this.render(callback);\n    //      this.render('/location');\n    //      this.render('/location', {some: data});\n    //      this.render('/location', callback);\n    //      this.render('/location', {some: data}, callback);\n    //      this.render('/location', {some: data}, {my: partials});\n    //      this.render('/location', callback, {my: partials});\n    //      this.render('/location', {some: data}, callback, {my: partials});\n    //\n    // ### Example\n    //\n    //      this.get('#/', function() {\n    //        this.render('mytemplate.template', {name: 'test'});\n    //      });\n    //\n    render: function(location, data, callback, partials) {\n      if (_isFunction(location) && !data) {\n        // invoked as render(callback)\n        return this.then(location);\n      } else {\n        if(_isFunction(data)) {\n          // invoked as render(location, callback, [partials])\n          partials = callback;\n          callback = data;\n          data = null;\n        } else if(callback && !_isFunction(callback)) {\n          // invoked as render(location, data, partials)\n          partials = callback;\n          callback = null;\n        }\n\n        return this.loadPartials(partials)\n                   .load(location)\n                   .interpolate(data, location)\n                   .then(callback);\n      }\n    },\n\n    // `render()` the `location` with `data` and then `swap()` the\n    // app's `$element` with the rendered content.\n    partial: function(location, data, callback, partials) {\n      if (_isFunction(callback)) {\n        // invoked as partial(location, data, callback, [partials])\n        return this.render(location, data, partials).swap(callback);\n      } else if (_isFunction(data)) {\n        // invoked as partial(location, callback, [partials])\n        return this.render(location, {}, callback).swap(data);\n      } else {\n        // invoked as partial(location, data, [partials])\n        return this.render(location, data, callback).swap();\n      }\n    },\n\n    // defers the call of function to occur in order of the render queue.\n    // The function can accept any number of arguments as long as the last\n    // argument is a callback function. This is useful for putting arbitrary\n    // asynchronous functions into the queue. The content passed to the\n    // callback is passed as `content` to the next item in the queue.\n    //\n    // ### Example\n    //\n    //     this.send($.getJSON, '/app.json')\n    //         .then(function(json) {\n    //           $('#message).text(json['message']);\n    //          });\n    //\n    //\n    send: function() {\n      var context = this,\n          args = _makeArray(arguments),\n          fun  = args.shift();\n\n      if (_isArray(args[0])) { args = args[0]; }\n\n      return this.then(function(content) {\n        args.push(function(response) { context.next(response); });\n        context.wait();\n        fun.apply(fun, args);\n        return false;\n      });\n    },\n\n    // iterates over an array, applying the callback for each item item. the\n    // callback takes the same style of arguments as `jQuery.each()` (index, item).\n    // The return value of each callback is collected as a single string and stored\n    // as `content` to be used in the next iteration of the `RenderContext`.\n    collect: function(array, callback, now) {\n      var context = this;\n      var coll = function() {\n        if (_isFunction(array)) {\n          callback = array;\n          array = this.content;\n        }\n        var contents = [], doms = false;\n        $.each(array, function(i, item) {\n          var returned = callback.apply(context, [i, item]);\n          if (returned.jquery && returned.length == 1) {\n            returned = returned[0];\n            doms = true;\n          }\n          contents.push(returned);\n          return returned;\n        });\n        return doms ? contents : contents.join('');\n      };\n      return now ? coll() : this.then(coll);\n    },\n\n    // loads a template, and then interpolates it for each item in the `data`\n    // array. If a callback is passed, it will call the callback with each\n    // item in the array _after_ interpolation\n    renderEach: function(location, name, data, callback) {\n      if (_isArray(name)) {\n        callback = data;\n        data = name;\n        name = null;\n      }\n      return this.load(location).then(function(content) {\n          var rctx = this;\n          if (!data) {\n            data = _isArray(this.previous_content) ? this.previous_content : [];\n          }\n          if (callback) {\n            $.each(data, function(i, value) {\n              var idata = {}, engine = this.next_engine || location;\n              if (name) {\n                idata[name] = value;\n              } else {\n                idata = value;\n              }\n              callback(value, rctx.event_context.interpolate(content, idata, engine));\n            });\n          } else {\n            return this.collect(data, function(i, value) {\n              var idata = {}, engine = this.next_engine || location;\n              if (name) {\n                idata[name] = value;\n              } else {\n                idata = value;\n              }\n              return this.event_context.interpolate(content, idata, engine);\n            }, true);\n          }\n      });\n    },\n\n    // uses the previous loaded `content` and the `data` object to interpolate\n    // a template. `engine` defines the templating/interpolation method/engine\n    // that should be used. If `engine` is not passed, the `next_engine` is\n    // used. If `retain` is `true`, the final interpolated data is appended to\n    // the `previous_content` instead of just replacing it.\n    interpolate: function(data, engine, retain) {\n      var context = this;\n      return this.then(function(content, prev) {\n        if (!data && prev) { data = prev; }\n        if (this.next_engine) {\n          engine = this.next_engine;\n          this.next_engine = false;\n        }\n        var rendered = context.event_context.interpolate(content, data, engine, this.partials);\n        return retain ? prev + rendered : rendered;\n      });\n    },\n\n    // Swap the return contents ensuring order. See `Application#swap`\n    swap: function(callback) {\n      return this.then(function(content) {\n        this.event_context.swap(content, callback);\n        return content;\n      }).trigger('changed', {});\n    },\n\n    // Same usage as `jQuery.fn.appendTo()` but uses `then()` to ensure order\n    appendTo: function(selector) {\n      return this.then(function(content) {\n        $(selector).append(content);\n      }).trigger('changed', {});\n    },\n\n    // Same usage as `jQuery.fn.prependTo()` but uses `then()` to ensure order\n    prependTo: function(selector) {\n      return this.then(function(content) {\n        $(selector).prepend(content);\n      }).trigger('changed', {});\n    },\n\n    // Replaces the `$(selector)` using `html()` with the previously loaded\n    // `content`\n    replace: function(selector) {\n      return this.then(function(content) {\n        $(selector).html(content);\n      }).trigger('changed', {});\n    },\n\n    // trigger the event in the order of the event context. Same semantics\n    // as `Sammy.EventContext#trigger()`. If data is omitted, `content`\n    // is sent as `{content: content}`\n    trigger: function(name, data) {\n      return this.then(function(content) {\n        if (typeof data == 'undefined') { data = {content: content}; }\n        this.event_context.trigger(name, data);\n        return content;\n      });\n    }\n\n  });\n\n  // `Sammy.EventContext` objects are created every time a route is run or a\n  // bound event is triggered. The callbacks for these events are evaluated within a `Sammy.EventContext`\n  // This within these callbacks the special methods of `EventContext` are available.\n  //\n  // ### Example\n  //\n  //       $.sammy(function() {\n  //         // The context here is this Sammy.Application\n  //         this.get('#/:name', function() {\n  //           // The context here is a new Sammy.EventContext\n  //           if (this.params['name'] == 'sammy') {\n  //             this.partial('name.html.erb', {name: 'Sammy'});\n  //           } else {\n  //             this.redirect('#/somewhere-else')\n  //           }\n  //         });\n  //       });\n  //\n  // Initialize a new EventContext\n  //\n  // ### Arguments\n  //\n  // * `app` The `Sammy.Application` this event is called within.\n  // * `verb` The verb invoked to run this context/route.\n  // * `path` The string path invoked to run this context/route.\n  // * `params` An Object of optional params to pass to the context. Is converted\n  //   to a `Sammy.Object`.\n  // * `target` a DOM element that the event that holds this context originates\n  //   from. For post, put and del routes, this is the form element that triggered\n  //   the route.\n  //\n  Sammy.EventContext = function(app, verb, path, params, target) {\n    this.app    = app;\n    this.verb   = verb;\n    this.path   = path;\n    this.params = new Sammy.Object(params);\n    this.target = target;\n  };\n\n  Sammy.EventContext.prototype = $.extend({}, Sammy.Object.prototype, {\n\n    // A shortcut to the app's `$element()`\n    $element: function() {\n      return this.app.$element(_makeArray(arguments).shift());\n    },\n\n    // Look up a templating engine within the current app and context.\n    // `engine` can be one of the following:\n    //\n    // * a function: should conform to `function(content, data) { return interpolated; }`\n    // * a template path: 'template.ejs', looks up the extension to match to\n    //   the `ejs()` helper\n    // * a string referring to the helper: \"mustache\" => `mustache()`\n    //\n    // If no engine is found, use the app's default `template_engine`\n    //\n    engineFor: function(engine) {\n      var context = this, engine_match;\n      // if path is actually an engine function just return it\n      if (_isFunction(engine)) { return engine; }\n      // lookup engine name by path extension\n      engine = (engine || context.app.template_engine).toString();\n      if ((engine_match = engine.match(/\\.([^\\.\\?\\#]+)(\\?|$)/))) {\n        engine = engine_match[1];\n      }\n      // set the engine to the default template engine if no match is found\n      if (engine && _isFunction(context[engine])) {\n        return context[engine];\n      }\n\n      if (context.app.template_engine) {\n        return this.engineFor(context.app.template_engine);\n      }\n      return function(content, data) { return content; };\n    },\n\n    // using the template `engine` found with `engineFor()`, interpolate the\n    // `data` into `content`\n    interpolate: function(content, data, engine, partials) {\n      return this.engineFor(engine).apply(this, [content, data, partials]);\n    },\n\n    // Create and return a `Sammy.RenderContext` calling `render()` on it.\n    // Loads the template and interpolate the data, however does not actual\n    // place it in the DOM.\n    //\n    // ### Example\n    //\n    //      // mytemplate.mustache <div class=\"name\">{{name}}</div>\n    //      render('mytemplate.mustache', {name: 'quirkey'});\n    //      // sets the `content` to <div class=\"name\">quirkey</div>\n    //      render('mytemplate.mustache', {name: 'quirkey'})\n    //        .appendTo('ul');\n    //      // appends the rendered content to $('ul')\n    //\n    render: function(location, data, callback, partials) {\n      return new Sammy.RenderContext(this).render(location, data, callback, partials);\n    },\n\n    // Create and return a `Sammy.RenderContext` calling `renderEach()` on it.\n    // Loads the template and interpolates the data for each item,\n    // however does not actually place it in the DOM.\n    //\n    // `name` is an optional parameter (if it is an array, it is used as `data`,\n    // and the third parameter used as `callback`, if set).\n    //\n    // If `data` is not provided, content from the previous step in the chain\n    // (if it is an array) is used, and `name` is used as the key for each\n    // element of the array (useful for referencing in template).\n    //\n    // ### Example\n    //\n    //      // mytemplate.mustache <div class=\"name\">{{name}}</div>\n    //      renderEach('mytemplate.mustache', [{name: 'quirkey'}, {name: 'endor'}])\n    //      // sets the `content` to <div class=\"name\">quirkey</div><div class=\"name\">endor</div>\n    //      renderEach('mytemplate.mustache', [{name: 'quirkey'}, {name: 'endor'}]).appendTo('ul');\n    //      // appends the rendered content to $('ul')\n    //\n    //      // names.json: [\"quirkey\", \"endor\"]\n    //      this.load('names.json').renderEach('mytemplate.mustache', 'name').appendTo('ul');\n    //      // uses the template to render each item in the JSON array\n    //\n    renderEach: function(location, name, data, callback) {\n      return new Sammy.RenderContext(this).renderEach(location, name, data, callback);\n    },\n\n    // create a new `Sammy.RenderContext` calling `load()` with `location` and\n    // `options`. Called without interpolation or placement, this allows for\n    // preloading/caching the templates.\n    load: function(location, options, callback) {\n      return new Sammy.RenderContext(this).load(location, options, callback);\n    },\n\n    // create a new `Sammy.RenderContext` calling `loadPartials()` with `partials`.\n    loadPartials: function(partials) {\n      return new Sammy.RenderContext(this).loadPartials(partials);\n    },\n\n    // `render()` the `location` with `data` and then `swap()` the\n    // app's `$element` with the rendered content.\n    partial: function(location, data, callback, partials) {\n      return new Sammy.RenderContext(this).partial(location, data, callback, partials);\n    },\n\n    // create a new `Sammy.RenderContext` calling `send()` with an arbitrary\n    // function\n    send: function() {\n      var rctx = new Sammy.RenderContext(this);\n      return rctx.send.apply(rctx, arguments);\n    },\n\n    // Changes the location of the current window. If `to` begins with\n    // '#' it only changes the document's hash. If passed more than 1 argument\n    // redirect will join them together with forward slashes.\n    //\n    // ### Example\n    //\n    //      redirect('#/other/route');\n    //      // equivalent to\n    //      redirect('#', 'other', 'route');\n    //\n    redirect: function() {\n      var to, args = _makeArray(arguments),\n          current_location = this.app.getLocation(),\n          l = args.length;\n      if (l > 1) {\n        var i = 0, paths = [], pairs = [], params = {}, has_params = false;\n        for (; i < l; i++) {\n          if (typeof args[i] == 'string') {\n            paths.push(args[i]);\n          } else {\n            $.extend(params, args[i]);\n            has_params = true;\n          }\n        }\n        to = paths.join('/');\n        if (has_params) {\n          for (var k in params) {\n            pairs.push(this.app._encodeFormPair(k, params[k]));\n          }\n          to += '?' + pairs.join('&');\n        }\n      } else {\n        to = args[0];\n      }\n      this.trigger('redirect', {to: to});\n      this.app.last_location = [this.verb, this.path];\n      this.app.setLocation(to);\n      if (new RegExp(to).test(current_location)) {\n        this.app.trigger('location-changed');\n      }\n    },\n\n    // Triggers events on `app` within the current context.\n    trigger: function(name, data) {\n      if (typeof data == 'undefined') { data = {}; }\n      if (!data.context) { data.context = this; }\n      return this.app.trigger(name, data);\n    },\n\n    // A shortcut to app's `eventNamespace()`\n    eventNamespace: function() {\n      return this.app.eventNamespace();\n    },\n\n    // A shortcut to app's `swap()`\n    swap: function(contents, callback) {\n      return this.app.swap(contents, callback);\n    },\n\n    // Raises a possible `notFound()` error for the current path.\n    notFound: function() {\n      return this.app.notFound(this.verb, this.path);\n    },\n\n    // Default JSON parsing uses jQuery's `parseJSON()`. Include `Sammy.JSON`\n    // plugin for the more conformant \"crockford special\".\n    json: function(string) {\n      return $.parseJSON(string);\n    },\n\n    // //=> Sammy.EventContext: get #/ {}\n    toString: function() {\n      return \"Sammy.EventContext: \" + [this.verb, this.path, this.params].join(' ');\n    }\n\n  });\n\n  return Sammy;\n});\n","import { sendRequest } from \"./helpers/requester\";\r\nimport { router } from \"./router/router\";\r\nimport { Mustache } from \"sammy\";\r\n//here we get the current path\r\nconst currentPath = window.location.pathname;\r\nconst container = document.getElementById(\"container\");\r\n\r\nif (currentPath === \"/\") {\r\n  //   sendRequest(\"/test\", \"GET\")\r\n  //     .then(result => {\r\n  //       const data = { title: \"Hello\" };\r\n  //       const html = Mustache.to_html(result.data, data);\r\n  //       container.innerHTML = html;\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(`backend error ${err}`);\r\n  //     });\r\n  //question как да си взема\r\n  let sample = document.getElementById(\"personTpl\").innerHTML;\r\n  let data = { title: \"Hi\" };\r\n  let html = Mustache.to_html(sample, data);\r\n  container.innerHTML = html;\r\n  console.log(sample);\r\n} else {\r\n  const route = router.routes.filter(r => {\r\n    return r.path === currentPath;\r\n  })[0];\r\n  console.log(route);\r\n  if (route) {\r\n    //here we do back-end requests for the view\r\n\r\n    const url = route.path;\r\n    console.log(url);\r\n  } else {\r\n    container.innerHTML = '<div class=\"wrong-url\">404 wrong URL</div>';\r\n  }\r\n}\r\n","import \"./router/router\";\r\nimport \"./app\";\r\nimport \"./helpers/requester\";\r\nimport \"./router/router\";\r\nimport \"./helpers/storage\";\r\nimport \"./views/home/home.html\";\r\n"]}